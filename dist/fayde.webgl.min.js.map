{"version":3,"sources":["_version.ts","fayde.webgl.js","WebGLCanvas.ts","WebGLDrawEventArgs.ts","WebGLSource.ts","updater/WebGLCanvasUpdater.ts","updater/arrange/WebGLCanvasArrangePipeDef.ts","updater/measure/WebGLCanvasMeasurePipeDef.ts","updater/render/WebGLCanvasRenderPipeDef.ts","updater/arrange/tapins/buildLayoutClip.ts","updater/arrange/tapins/doOverride.ts","updater/measure/tapins/doOverride.ts","updater/render/tapins/doRender.ts"],"names":["Fayde","Fayde.WebGL","__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","Fayde.WebGL.WebGLCanvas","Fayde.WebGL.WebGLCanvas.constructor","Fayde.WebGL.WebGLCanvas.CreateLayoutUpdater","Fayde.WebGL.WebGLCanvas.OnSourceChanged","Fayde.WebGL.WebGLCanvas.OnDraw","Fayde.WebGL.reactions","Fayde.WebGL.WebGLDrawEventArgs","Fayde.WebGL.WebGLDrawEventArgs.constructor","Fayde.WebGL.WebGLSource","Fayde.WebGL.WebGLSource.constructor","Fayde.WebGL.WebGLSource.resize","Fayde.WebGL.WebGLSource.draw","Fayde.WebGL.WebGLSource.detach","Fayde.WebGL.WebGLSource.attach","fayde","fayde.webgl","fayde.webgl.updater","fayde.webgl.updater.WebGLCanvasUpdater","fayde.webgl.updater.WebGLCanvasUpdater.constructor","fayde.webgl.updater.WebGLCanvasUpdater.init","fayde.webgl.updater.WebGLCanvasUpdater.onSurfaceChanged","fayde.webgl.updater.WebGLCanvasUpdater.preRender","fayde.webgl.updater.WebGLCanvasUpdater.onSizeChanged","fayde.webgl.updater.arrange","fayde.webgl.updater.arrange.WebGLCanvasArrangePipeDef","fayde.webgl.updater.arrange.WebGLCanvasArrangePipeDef.constructor","fayde.webgl.updater.measure","fayde.webgl.updater.measure.WebGLCanvasMeasurePipeDef","fayde.webgl.updater.measure.WebGLCanvasMeasurePipeDef.constructor","fayde.webgl.updater.render","fayde.webgl.updater.render.WebGLCanvasRenderPipeDef","fayde.webgl.updater.render.WebGLCanvasRenderPipeDef.constructor","fayde.webgl.updater.arrange.tapins","fayde.webgl.updater.arrange.tapins.buildLayoutClip","fayde.webgl.updater.arrange.tapins.doOverride","fayde.webgl.updater.measure.tapins","fayde.webgl.updater.measure.tapins.doOverride","fayde.webgl.updater.render.tapins","fayde.webgl.updater.render.tapins.doRender"],"mappings":"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","file":"fayde.webgl.min.js","sourcesContent":["module Fayde.WebGL {\r\n    export var version = '0.1.0';\r\n}",null,"module Fayde.WebGL {\r\n    export class WebGLCanvas extends FrameworkElement {\r\n        CreateLayoutUpdater() {\r\n            return new fayde.webgl.updater.WebGLCanvasUpdater();\r\n        }\r\n\r\n        static SourceProperty = DependencyProperty.Register(\"Source\", () => WebGL.WebGLSource, WebGLCanvas, undefined, (d: WebGLCanvas, args) => d.OnSourceChanged(args.OldValue, args.NewValue));\r\n        Source: WebGL.WebGLSource;\r\n\r\n        Draw = new nullstone.Event<WebGL.WebGLDrawEventArgs>();\r\n\r\n        constructor() {\r\n            super();\r\n            this.DefaultStyleKey = WebGLCanvas;\r\n            if (!this.Source)\r\n                this.SetCurrentValue(WebGLCanvas.SourceProperty, new WebGL.WebGLSource(document.createElement('canvas')));\r\n        }\r\n\r\n        protected OnSourceChanged(oldSource: WebGL.WebGLSource, newSource: WebGL.WebGLSource) {\r\n            if (oldSource)\r\n                oldSource.detach();\r\n            if (newSource)\r\n                newSource.attach((gl, width, height) => this.OnDraw(gl, width, height));\r\n        }\r\n\r\n        protected OnDraw(gl: WebGLRenderingContext, width: number, height: number) {\r\n            this.Draw.raise(this, new WebGL.WebGLDrawEventArgs(gl, width, height));\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(WebGLCanvas);\r\n\r\n    module reactions {\r\n        UIReaction(WebGLCanvas.SourceProperty, (upd, ov, nv, wc: WebGLCanvas) => {\r\n            (<any>wc).OnSourceChanged(ov, nv);\r\n        }, false);\r\n    }\r\n}","module Fayde.WebGL {\r\n    export class WebGLDrawEventArgs implements nullstone.IEventArgs {\r\n        gl: WebGLRenderingContext;\r\n        width: number;\r\n        height: number;\r\n\r\n        constructor(gl: WebGLRenderingContext, width: number, height: number) {\r\n            Object.defineProperties(this, {\r\n                \"gl\": {value: gl, writable: false},\r\n                \"width\": {value: width, writable: false},\r\n                \"height\": {value: height, writable: false}\r\n            });\r\n        }\r\n    }\r\n}","module Fayde.WebGL {\r\n    export interface IDrawEvent {\r\n        (gl: WebGLRenderingContext, width: number, height: number);\r\n    }\r\n\r\n    export class WebGLSource implements fayde.webgl.updater.IWebGLSource {\r\n        private $gl: WebGLRenderingContext;\r\n        private $onDraw: IDrawEvent;\r\n\r\n        constructor(private $element: HTMLCanvasElement) {\r\n            this.$gl = <WebGLRenderingContext>($element.getContext(\"webgl\") || $element.getContext(\"experimental-webgl\"));\r\n        }\r\n\r\n        resize(width: number, height: number) {\r\n            var canvas = this.$element;\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n        }\r\n\r\n        draw(ctx: CanvasRenderingContext2D) {\r\n            //TODO: Optimize clipping of gl canvas inside perspective of\r\n            var canvas = this.$element;\r\n            this.$onDraw && this.$onDraw(this.$gl, canvas.width, canvas.height);\r\n            ctx.drawImage(this.$element, 0, 0);\r\n        }\r\n\r\n        detach() {\r\n            this.$onDraw = null;\r\n        }\r\n\r\n        attach(onDraw: IDrawEvent) {\r\n            this.$onDraw = onDraw;\r\n        }\r\n    }\r\n}","module fayde.webgl.updater {\r\n    export interface IWebGLUpdaterAssets extends minerva.core.IUpdaterAssets, measure.IInput, arrange.IInput, render.IInput {\r\n        source: IWebGLSource;\r\n    }\r\n\r\n    export class WebGLCanvasUpdater extends minerva.core.Updater {\r\n        assets: IWebGLUpdaterAssets;\r\n\r\n        init() {\r\n            this.setMeasurePipe(minerva.singleton(measure.WebGLCanvasMeasurePipeDef))\r\n                .setArrangePipe(minerva.singleton(arrange.WebGLCanvasArrangePipeDef))\r\n                .setProcessDownPipe(minerva.singleton(minerva.controls.canvas.processdown.CanvasProcessDownPipeDef))\r\n                .setProcessUpPipe(minerva.singleton(minerva.controls.canvas.processup.CanvasProcessUpPipeDef))\r\n                .setRenderPipe(minerva.singleton(render.WebGLCanvasRenderPipeDef));\r\n\r\n            var assets = this.assets;\r\n            assets.source = null;\r\n\r\n            super.init();\r\n        }\r\n\r\n        onSurfaceChanged(oldSurface: minerva.core.ISurface, newSurface: minerva.core.ISurface) {\r\n            if (oldSurface)\r\n                oldSurface.unhookPrerender(this);\r\n            if (newSurface)\r\n                newSurface.hookPrerender(this);\r\n        }\r\n\r\n        preRender() {\r\n            var assets = this.assets;\r\n            if (assets.source)\r\n                this.invalidate();\r\n        }\r\n\r\n        onSizeChanged(oldSize: Size, newSize: Size) {\r\n            super.onSizeChanged(oldSize, newSize);\r\n            var source = this.assets.source;\r\n            if (source)\r\n                source.resize(newSize.width, newSize.height);\r\n        }\r\n    }\r\n}","module fayde.webgl.updater.arrange {\r\n    export interface IInput extends minerva.core.arrange.IInput {\r\n    }\r\n    export interface IState extends minerva.core.arrange.IState {\r\n    }\r\n    export interface IOutput extends minerva.core.arrange.IOutput {\r\n    }\r\n    export class WebGLCanvasArrangePipeDef extends minerva.core.arrange.ArrangePipeDef {\r\n        constructor() {\r\n            super();\r\n            this.replaceTapin('doOverride', tapins.doOverride)\r\n                .replaceTapin('buildLayoutClip', tapins.buildLayoutClip);\r\n        }\r\n    }\r\n}","module fayde.webgl.updater.measure {\r\n    export interface IInput extends minerva.core.measure.IInput {\r\n    }\r\n    export interface IState extends minerva.core.measure.IState {\r\n    }\r\n    export interface IOutput extends minerva.core.measure.IOutput {\r\n    }\r\n\r\n    export class WebGLCanvasMeasurePipeDef extends minerva.core.measure.MeasurePipeDef {\r\n        constructor() {\r\n            super();\r\n            this.replaceTapin('doOverride', tapins.doOverride);\r\n        }\r\n    }\r\n}","module fayde.webgl.updater.render {\r\n    export interface IInput extends minerva.core.render.IInput {\r\n        source: IWebGLSource;\r\n    }\r\n\r\n    export class WebGLCanvasRenderPipeDef extends minerva.core.render.RenderPipeDef {\r\n        constructor() {\r\n            super();\r\n            this.replaceTapin('doRender', tapins.doRender);\r\n        }\r\n    }\r\n}","module fayde.webgl.updater.arrange.tapins {\r\n    export function buildLayoutClip (input: IInput, state: IState, output: IOutput, tree: minerva.core.IUpdaterTree, finalRect: Rect): boolean {\r\n        var lc = output.layoutClip;\r\n        lc.x = lc.y = lc.width = lc.height = 0;\r\n        return true;\r\n    }\r\n}","module fayde.webgl.updater.arrange.tapins {\r\n    export function doOverride (input: IInput, state: IState, output: IOutput, tree: minerva.core.IUpdaterTree, finalRect: Rect): boolean {\r\n        var cr = state.childRect;\r\n        Size.copyTo(state.finalSize, state.arrangedSize);\r\n        return true;\r\n    }\r\n}","module fayde.webgl.updater.measure.tapins {\r\n    export function doOverride(input: IInput, state: IState, output: IOutput, tree: minerva.core.IUpdaterTree, availableSize: Size): boolean {\r\n        var available = state.availableSize;\r\n        var desired = output.desiredSize;\r\n        desired.width = desired.height = 0;\r\n        return true;\r\n    }\r\n}","module fayde.webgl.updater.render.tapins {\r\n    export function doRender(input: IInput, state: minerva.core.render.IState, output: minerva.core.render.IOutput, ctx: minerva.core.render.RenderContext, region: Rect, tree: minerva.core.IUpdaterTree): boolean {\r\n        var source = input.source;\r\n        if (!source)\r\n            return true;\r\n\r\n        ctx.save();\r\n        minerva.core.helpers.renderLayoutClip(ctx, input, tree);\r\n        source.draw(ctx.raw);\r\n        ctx.restore();\r\n\r\n        return true;\r\n    }\r\n}"],"sourceRoot":"/source/"}